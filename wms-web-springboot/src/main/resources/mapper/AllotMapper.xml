<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.teeny.wms.web.repository.AllotMapper">

    <resultMap id="keyValue" type="keyValue">
        <result column="id" property="key" javaType="int"/>
        <result column="name" property="value"/>
    </resultMap>

    <select id="getList" resultType="AllotEntity">
        SELECT
            d.smb_id                               AS id,
            d.original_id                          AS originalId,
            p.p_id                                 AS goodsId,
            p.name                                 AS goodsName,
            d.Batchno                              AS lotNo,
            p.standard                             AS specification,
            p.Factory                              AS manufacturer,
            p.unit1Name                            AS unit,
            d.quantity                             AS amount,
            CONVERT(VARCHAR(100), d.Validdate, 23) AS validateDate,
            CONVERT(VARCHAR(100), d.MakeDate, 23)  AS productDate,
            p.barcode,
            b.billnumber                           AS billNo,
            d.DealStates                           AS status,
            p.serial_number                        AS number,
            l1.loc_code                            AS exportName,
            l2.loc_code                            AS importName,
            p.pinyin                               AS pinyin
        FROM ${account}.dbo.pda_TranBill_D d
            LEFT JOIN ${account}.dbo.pda_Products p ON p.p_id = d.p_id
            LEFT JOIN ${account}.dbo.pda_TranBill b ON b.billid = d.bill_id
            LEFT JOIN ${account}.dbo.pda_location l1 ON l1.l_id = d.Location_id
            LEFT JOIN ${account}.dbo.pda_location l2 ON l2.l_id = d.location_id2
        WHERE d.DealStates = 0
        <if test="billNo != null and billNo != ''">
            AND b.billnumber = #{billNo}
        </if>
        <if test="goodsCode != null and goodsCode != ''">
            AND p.barcode = #{goodsCode}
        </if>
        <if test="sId != 0">
            AND b.sout_id = #{sId}
        </if>
        <if test="saId != 0">
            AND b.sa_outid = #{saId}
        </if>
    </select>

    <update id="updateAll">
        UPDATE ${account}.dbo.pda_TranBill_D
        SET DealStates = 1, wctime = getdate(), loginid = #{userId}
        WHERE original_id IN
        <foreach collection="list" index="index" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>

        <selectKey keyProperty="count" resultType="int" order="AFTER">
            SELECT count(*) AS total
            FROM ${account}.dbo.pda_TranBill_D d
            WHERE d.DealStates = 0
            AND d.bill_id = (SELECT DISTINCT d1.bill_id
            FROM ${account}.dbo.pda_TranBill_D d1
            WHERE d1.original_id = #{id})
        </selectKey>

        <if test="count==0">
            UPDATE ${account}.dbo.pda_TranBill
            SET billstates = 3
            WHERE billid = (SELECT DISTINCT d.bill_id
            FROM ${account}.dbo.pda_TranBill_D d
            WHERE d.original_id = #{id})
        </if>
    </update>

    <update id="updateOne">
        UPDATE ${account}.dbo.pda_TranBill_D
        SET DealStates = 1, wctime = getdate(), loginid = #{userId}
        WHERE original_id = #{id}

        <selectKey keyProperty="count" resultType="int" order="AFTER">
            SELECT count(*) AS total
            FROM ${account}.dbo.pda_TranBill_D d
            WHERE d.DealStates = 0
            AND d.bill_id = (SELECT DISTINCT d1.bill_id
            FROM ${account}.dbo.pda_TranBill_D d1
            WHERE d1.original_id = #{id})
        </selectKey>

        <if test="count==0">
            UPDATE ${account}.dbo.pda_TranBill
            SET billstates = 3
            WHERE billid = (SELECT DISTINCT d.bill_id
            FROM ${account}.dbo.pda_TranBill_D d
            WHERE d.original_id = #{id})
        </if>
    </update>

    <select id="getOrderList" resultMap="keyValue">
        SELECT
        b.billid AS id,
        b.billnumber AS name
        FROM ${account}.dbo.pda_TranBill b
        <where>
            <if test="saId!=0">
                b.sa_outid = #{saId}
            </if>
            <if test="sId!=0">
                AND b.sout_id = #{sId}
            </if>
        </where>
    </select>

    <insert id="copyData">
        INSERT INTO ${account}.dbo.pda_TranBill_D
        (bill_id,
         p_id,
         MakeDate,
         Validdate,
         Batchno,
         quantity,
         TaxPrice,
         TaxTotal,
         CostPrice,
         CostTotal,
         ss_id,
         sd_id,
         Location_id,
         location_id2,
         Supplier_id,
         DealStates,
         pdastates,
         original_id,
         wctime,
         loginid)
            SELECT
                d.bill_id,
                d.p_id,
                d.MakeDate,
                d.Validdate,
                d.Batchno,
                #{amount,jdbcType=NUMERIC},
                d.TaxPrice,
                d.TaxTotal,
                d.CostPrice,
                d.CostTotal,
                d.ss_id,
                d.sd_id,
                d.Location_id,
                #{locationId,jdbcType=NUMERIC},
                d.Supplier_id,
                1,
                d.pdastates,
                d.original_id,
                getdate(),
                #{userId,jdbcType=NUMERIC}
            FROM ${account}.dbo.pda_TranBill_D d
            WHERE d.smb_id = (SELECT max(d1.smb_id)
                              FROM ${account}.dbo.pda_TranBill_D d1
                              WHERE d1.original_id = #{id})

    </insert>

    <select id="getGoodsCode" resultMap="keyValue">
        SELECT DISTINCT
        d.original_id AS id,
        p.barcode AS name,
        p.pinyin      AS alternate
        FROM ${account}.dbo.pda_TranBill_D d
        INNER JOIN ${account}.dbo.pda_Products p ON d.p_id = p.p_id
        LEFT JOIN ${account}.dbo.pda_TranBill b ON d.bill_id = b.billid
        <where>
            <if test="saId!=0">
                b.sa_outid = #{saId}
            </if>
            <if test="sId!=0">
                AND b.sout_id = #{sId}
            </if>
        </where>
    </select>

    <delete id="deleteByIds">
        DELETE FROM ${account}.dbo.pda_TranBill_D
        WHERE original_id = #{originalId}
        AND smb_id IN
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <update id="updateBillStatus">
        <selectKey keyProperty="count" resultType="int" order="BEFORE">
            SELECT count(*) AS total
            FROM ${account}.dbo.pda_TranBill_D d
            WHERE d.DealStates=0
            AND d.bill_id =
            (SELECT DISTINCT d1.bill_id
            FROM ${account}.dbo.pda_TranBill_D d1
            WHERE d1.original_id=#{id})
        </selectKey>

        <if test="count == 0">
            UPDATE ${account}.dbo.pda_TranBill
            SET billstates = 3
            WHERE billid = (SELECT DISTINCT d.bill_id
            FROM ${account}.dbo.pda_TranBill_D d
            WHERE d.original_id = #{id})
        </if>
    </update>


    <select id="getAllotGoodsList" resultType="AllotGoodsEntity">
        SELECT
            s.storehouse_id                       AS id,
            p.p_id                                AS goodsId,
            p.name                                AS goodsName,
            s.batchno                             AS lotNo,
            p.standard                            AS specification,
            CONVERT(VARCHAR(100), p.validday, 23) AS validityDate,
            CONVERT(VARCHAR(100), s.makedate, 23) AS productionDate,
            p.unit1Name                           AS unit,
            s.quantity                            AS amount,
            p.Factory                             AS manufacturer,
            l.loc_code                            AS locationCode,
            p.barcode                             AS goodsCode
        FROM ${account}.dbo.VW_PDA_Storehouse s
            LEFT JOIN ${account}.dbo.pda_location l ON l.l_id = s.location_id
            LEFT JOIN ${account}.dbo.pda_Products p ON p.p_id = s.p_id
        <where>
            <if test="location != null and location != ''">
                l.loc_code = #{location}
            </if>
            <if test="goods != null and goods != ''">
                AND (p.barcode = #{goods} OR p.pinyin LIKE '%' + #{goods} + '%' OR p.name LIKE '%' + #{goods} + '%')
            </if>
            <if test="warehouseId > 0">
                AND l.s_id = #{warehouseId}
            </if>
            <if test="repositoryId > 0">
                AND l.sa_id = #{repositoryId}
            </if>
            <if test="areaId > 0">
                AND l.sc_id = #{areaId}
            </if>
        </where>
    </select>

    <insert id="generateBill">
        <selectKey keyProperty="count" resultType="int" order="BEFORE" keyColumn="count">
            SELECT count(*) AS count FROM ${account}.dbo.pda_AddTranBill b WHERE b.pdastates = 0 AND b.e_id = #{userId}
        </selectKey>

        <if test="count==0">
            INSERT INTO ${account}.dbo.pda_AddTranBill
            (billnumber, e_id, billstates, pdastates, createtime)
            VALUES
            (#{billNo, jdbcType=VARCHAR}, #{userId, jdbcType=INTEGER}, 0, 0, getdate())
        </if>
    </insert>

    <update id="generateAllotOrder">
        <selectKey keyProperty="count" resultType="int" order="BEFORE" keyColumn="count">
            SELECT
            count(*) AS count
            FROM ${account}.dbo.pda_AddTranBill_D d
            INNER JOIN ${account}.dbo.pda_AddTranBill b ON b.billid = d.bill_id
            WHERE b.billstates = 0 AND b.e_id = #{userId} AND d.storehouse_id = #{id}
        </selectKey>

        <choose>
            <when test="count == 0">
                INSERT INTO ${account}.dbo.pda_AddTranBill_D
                (bill_id,
                p_id,
                storehouse_id,
                Batchno,
                createtime,
                pdastates)
                SELECT
                (SELECT b.billid FROM ${account}.dbo.pda_AddTranBill b WHERE b.billstates = 0 AND b.e_id = #{userId}),
                s.p_id,
                #{id,jdbcType=INTEGER},
                s.batchno,
                getdate(),
                0
                FROM ${account}.dbo.VW_PDA_Storehouse s
                WHERE s.storehouse_id = #{id}
            </when>
            <otherwise>
                UPDATE ${account}.dbo.pda_AddTranBill_D SET createtime = getdate()
                WHERE storehouse_id = #{id}
                AND bill_id IN (SELECT b.billid FROM ${account}.dbo.pda_AddTranBill b WHERE b.billstates = 0 AND b.e_id = #{userId})
            </otherwise>
        </choose>
    </update>

    <select id="getTempleGoodsList" resultType="AllotGoodsEntity">
        SELECT
            s.storehouse_id                       AS id,
            d.smb_id                              AS detailId,
            b.billid                              AS billId,
            p.p_id                                AS goodsId,
            p.name                                AS goodsName,
            s.batchno                             AS lotNo,
            p.standard                            AS specification,
            CONVERT(VARCHAR(100), p.validday, 23) AS validityDate,
            CONVERT(VARCHAR(100), s.makedate, 23) AS productionDate,
            p.unit1Name                           AS unit,
            s.quantity                            AS amount,
            p.Factory                             AS manufacturer,
            l.loc_code                            AS locationCode,
            p.barcode                             AS goodsCode,
            l.loc_code                            AS exportLocation,
            ld.location_id2                       AS importLocation,
            s.quantity                            AS currentInventory
        FROM ${account}.dbo.VW_PDA_Storehouse s
            INNER JOIN ${account}.dbo.pda_AddTranBill_D d ON d.storehouse_id = s.storehouse_id
            INNER JOIN ${account}.dbo.pda_AddTranBill b ON b.billid = d.bill_id
            LEFT JOIN ${account}.dbo.pda_AddTranBillLoc_D ld ON ld.smb_id = d.smb_id
            LEFT JOIN ${account}.dbo.pda_location l ON l.l_id = s.location_id
            LEFT JOIN ${account}.dbo.pda_Products p ON p.p_id = s.p_id
        WHERE b.e_id = #{userId} AND b.billstates = 0
    </select>

    <insert id="completeAllot">
        INSERT INTO ${account}.dbo.pda_AddTranBillLoc_D (bill_id, smb_id, quantity, location_id2)
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (#{billId}, #{id}, #{item.amount}, SELECT l.l_id FROM ${account}.dbo.pda_location l WHERE l.loc_code = #{item.locationCode})
        </foreach>
    </insert>

    <select id="getLocationList" resultType="AllotLocationEntity">
        SELECT
            ld.quantity  AS amount,
            l.loc_code   AS locationCode
        FROM ${account}.dbo.pda_AddTranBillLoc_D ld
            INNER JOIN ${account}.dbo.pda_location l ON ld.location_id2 = l.l_id
        WHERE ld.smb_id = #{id}
    </select>
</mapper>