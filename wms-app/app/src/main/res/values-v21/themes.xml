<?xml version="1.0" encoding="utf-8"?>
<resources>

    <style name="AppTheme" parent="Theme.Base">
        <!--底部导航栏颜色-->
        <item name="android:navigationBarColor">@android:color/black</item>
        <!--状态栏颜色5.0或以上使用这个-->
        <item name="android:statusBarColor">@color/colorPrimaryDark</item>
        <!--某些 Views “normal” 状态下的颜色，常见如：unselected CheckBox 和 RadioButton，失去焦点时的 EditText，Toolbar 溢出按钮颜色，等等。-->
        <item name="android:colorControlNormal">@color/colorPrimary</item>
        <!--某种程度上，是 colorAccent 的替代者，比如对于 CheckBox 和 RadioButton 的 checked 状态，colorControlActivated 属性会覆盖 colorAccent 属性的对应颜色。-->
        <item name="android:colorControlActivated">@color/colorAccent</item>
        <!--所有可点击 Views 触摸状态下的 Ripple（涟漪）效果。仅作用于 Lollipop 及更高版本。-->
        <item name="android:colorControlHighlight">@color/colorPrimaryDark</item>
        <!--Button normal 状态下的背景色。注意，这种设置与 Button 的 android:background 属性改变背景色不同的是，前者在 Lollipop 及更高版本上会让 Button 依旧保持阴影和 Ripple 触摸效果。-->
        <item name="android:colorButtonNormal">@color/colorPrimary</item>
        <item name="android:windowDrawsSystemBarBackgrounds">true</item>
        <item name="android:windowContentTransitions">true</item>
        <item name="android:windowAllowEnterTransitionOverlap">true</item>
        <item name="android:windowAllowReturnTransitionOverlap">true</item>
        <item name="android:windowSharedElementEnterTransition">@android:transition/move</item>
        <item name="android:windowSharedElementExitTransition">@android:transition/move</item>
    </style>

    <style name="AppTheme.Drawer">
        <item name="android:statusBarColor">@android:color/transparent</item>
    </style>

</resources>